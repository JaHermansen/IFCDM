import { Placement } from "@floating-ui/dom";
import { LitElement } from "lit";
export declare class ContextMenu extends LitElement {
    /**
     * CSS styles for the component.
     */
    static styles: import("lit").CSSResult[];
    private _previousContainer;
    private _placement?;
    get placement(): Placement | undefined;
    set placement(value: Placement | undefined);
    static dialog: HTMLDialogElement;
    static menus: HTMLElement[];
    static removeMenus(): void;
    private _visible;
    get visible(): boolean;
    set visible(value: boolean);
    /**
     * Asynchronously updates the position of the context menu relative to a target element.
     * If no target element is provided, it attempts to use the parent node as the target.
     * The position is calculated using the `computePosition` function from `@floating-ui/dom`,
     * which considers various adjustments like offset, inline positioning, flipping, and shifting
     * to ensure the context menu is properly placed relative to the target element.
     *
     * @param [target] - The target element relative to which the context menu should be positioned.
     *                                 If not provided, the parent node is used as the target.
     * @returns A promise that resolves once the position has been updated. This method
     *                          does not explicitly return a value but updates the context menu's style
     *                          properties to position it on the screen.
     */
    updatePosition(): Promise<void>;
    connectedCallback(): void;
    protected render(): import("lit-html").TemplateResult<1>;
}
