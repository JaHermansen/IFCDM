import * as BUI from "@thatopen/ui";
import * as OBC from "@thatopen/components";
interface DataStyles {
    users: {
        [email: string]: {
            name: string;
            picture?: string;
        };
    };
}
interface FormValue {
    title: string;
    status: string;
    type: string;
    priority: string;
    assignedTo: string;
    labels: Iterable<string>;
    stage: string;
    description: string;
}
/**
 * Represents the UI elements and configuration for a topic form in the OBC system.
 *
 * @interface TopicFormUI
 */
export interface TopicFormUI {
    /**
     * The main components entry point of your app.
     */
    components: OBC.Components;
    /**
     * The topic data to be used in the form. This can be undefined if no topic is being edited.
     */
    topic?: OBC.Topic;
    /**
     * The initial values for the form fields. Can be a partial raw topic object.
     */
    value?: Partial<FormValue>;
    /**
     * Callback function triggered when the form is submitted.
     *
     * @param {OBC.Topic} topic - The topic created/updated from the form.
     * @returns {void | Promise<void>} - A void or a promise that resolves to void.
     */
    onSubmit?: (topic: OBC.Topic) => void | Promise<void>;
    /**
     * Callback function triggered when the form is canceled.
     *
     * @returns {void | Promise<void>} - A void or a promise that resolves to void.
     */
    onCancel?: () => void | Promise<void>;
    /**
     * Custom styles for the form components.
     */
    styles?: Partial<DataStyles>;
}
export declare const createTopicTemplate: (state: TopicFormUI) => BUI.TemplateResult<1>;
export {};
