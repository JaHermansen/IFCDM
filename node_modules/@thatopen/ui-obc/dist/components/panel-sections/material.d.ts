import { TemplateResult } from "lit";
import * as THREE from "three";
/**
 * Interface representing the state of the Material UI component. It contains a THREE.Material object.
 */
export interface MaterialUIState {
    material: THREE.Material;
}
/**
 * Function to generate a material template for a given THREE.Material. It creates a template with color picker, PBR inputs, and transparency checkbox.
 *
 * @param state - The MaterialUIState object containing the THREE.Material object to generate the template for.
 * @returns A TemplateResult object representing the material template.
 *          If the conditions are not met, it returns null.
 */
export declare const materialTemplate: (state: MaterialUIState) => TemplateResult<1>;
/**
 * Function to create a material component from a given THREE.Material. This function generates a template with color picker, PBR inputs, and transparency checkbox. It also adds event listeners to update the material state when the user interacts with the inputs.
 *
 * @param material - The THREE.Material object to create the component for.
 * @returns A component object containing the HTMLDivElement and the MaterialUIState.
 */
export declare const material: (material: THREE.Material) => [element: HTMLDivElement, update: (state?: Partial<MaterialUIState> | undefined) => MaterialUIState, currentState: () => MaterialUIState];
