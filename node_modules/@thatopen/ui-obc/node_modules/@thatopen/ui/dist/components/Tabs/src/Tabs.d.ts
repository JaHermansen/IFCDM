import { LitElement } from "lit";
/**
 * A custom tabs web component for BIM applications. HTML tag: bim-tabs
 */
export declare class Tabs extends LitElement {
    /**
     * CSS styles for the component.
     */
    static styles: import("lit").CSSResult[];
    private _switchers;
    private _tab?;
    /**
     * Indicates whether the tabs are positioned at the bottom of the container.
     *
     * @default false
     */
    bottom: boolean;
    /**
     * Indicates whether the tab switchers are hidden or not.
     *
     * @default false
     */
    switchersHidden: boolean;
    floating: boolean;
    /**
     * Sets the active tab based on the provided name.
     *
     * @param value - The name of the tab to be set as active. If `undefined`, no tab will be selected.
     *
     * @remarks
     * This method iterates through all child elements, finds the matching tab by name,
     * and sets its `hidden` property to `false`. It also updates the corresponding tab switcher's
     * `data-active` attribute to reflect the active state.
     *
     * If the provided `value` does not match any tab name, no tab will be selected.
     *
     * If the `tab` property is already set to the provided `value`, this method will deselect all tabs
     * by setting the `tab` property to `undefined`.
     *
     * @example
     * ```typescript
     * // Set the active tab to "tab1"
     * tabs.tab = "tab1";
     *
     * // Deselect all tabs
     * tabs.tab = undefined;
     * ```
     */
    set tab(value: string | undefined);
    get tab(): string | undefined;
    switchersFull: boolean;
    private getTabSwitcher;
    private onTabHiddenChange;
    private createSwitchers;
    private onSlotChange;
    protected render(): import("lit-html").TemplateResult<1>;
}
